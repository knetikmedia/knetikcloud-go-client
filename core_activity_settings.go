/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

package swagger

type CoreActivitySettings struct {

	// Whether the host can boot a user while the status is PLAYING. Default false
	BootInPlay bool `json:"boot_in_play,omitempty"`

	// Restriction for whether the host creating an occurrence can specify a custom launch address (such as their own ip address). Default 'false'
	CustomLaunchAddressAllowed bool `json:"custom_launch_address_allowed,omitempty"`

	// Restriction for who can host an occurrence. admin disallows regular users, player means the user must also be a player in the occurrence if not admin, non-player means the user has the option to host without being a player. Default 'player'
	HostOption string `json:"host_option,omitempty"`

	// Restriction for whether the host has control of the status once the game launches. If false they can only manage the game before (when setup and open). Default 'false'
	HostStatusControl bool `json:"host_status_control,omitempty"`

	// Whether users can join while the status is PLAYING. Default false
	JoinInPlay bool `json:"join_in_play,omitempty"`

	// Whether users can leave while the status is PLAYING. Default false
	LeaveInPlay bool `json:"leave_in_play,omitempty"`

	// The maximum number of players the game can hold
	MaxPlayers int32 `json:"max_players,omitempty"`

	// The minimum number of players the game can hold
	MinPlayers int32 `json:"min_players,omitempty"`

	// Restriction for who is able to report game end and results. Admin is always able to send results as well. Default 'none'
	ResultsTrust string `json:"results_trust,omitempty"`
}
